---
- name: Setup server
  hosts: server

  tasks:
  - name: Upgrade packages
    ansible.builtin.apt:
      upgrade: yes
      state: latest
      update_cache: yes
    become: yes
  - name: Install common packages
    ansible.builtin.apt:
      name:
        - make
        - gcc
        - curl
        - gnupg
        - software-properties-common
        - apt-transport-https
        - ca-certificates
        - python3-pip
        - unzip
      update_cache: yes
    become: yes

  # Kubernetes python library is necessary to run kubernetes.core.k8s
  # module.
  - name: Install kubernetes library
    ansible.builtin.pip:
      name: kubernetes

  # Install AWS CLI; this is needed to create a bucket on
  # Minio. Ideally it should be done through ansible.aws module,
  # but that's not available as it needs to set up port-forwarding.
  - name: Check aws
    ansible.builtin.command: which aws
    register: result
    ignore_errors: true
  - name: Install aws CLI
    block:
    - ansible.builtin.get_url:
        url: https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip
        dest: /tmp/awscliv2.zip
    - ansible.builtin.command: unzip /tmp/awscliv2.zip -d /tmp
    - ansible.builtin.command: sudo /tmp/aws/install
    when: result is failed

  - name: Check go
    ansible.builtin.command: which /usr/local/go/bin/go
    register: result
    ignore_errors: true
  - name: Install go
    ansible.builtin.script:
      cmd: scripts/install-go.sh
    when: result is failed

  - name: Check docker
    ansible.builtin.command: which docker
    register: result
    ignore_errors: true
  - name: Install docker
    ansible.builtin.script:
      cmd: scripts/install-docker.sh
    when: result is failed

  - name: Check kind
    ansible.builtin.command: which kind
    register: result
    ignore_errors: true
  - name: Install kind
    ansible.builtin.script:
      cmd: scripts/install-kind.sh
    when: result is failed

  - name: Check kubectl
    ansible.builtin.command: which kubectl
    register: result
    ignore_errors: true
  - name: Install kubectl
    ansible.builtin.script:
      cmd: scripts/install-kubectl.sh
    when: result is failed

  - name: Check helm
    ansible.builtin.command: which helm
    register: result
    ignore_errors: true
  - name: Install helm
    ansible.builtin.script:
      cmd: scripts/install-helm.sh
    when: result is failed

  - name: Check nvidia-tools
    ansible.builtin.command: which nvidia-ctk
    register: result
    ignore_errors: true
  - name: Install nvidia-tools
    ansible.builtin.script:
      cmd: scripts/install-nvidia-tools.sh
    when: result is failed
  - name: Reboot
    ansible.builtin.reboot: reboot_timeout=600
    become: true
    when: result is failed

  - name: Setup kind cluster
    tags:
    - kind_setup
    ansible.builtin.script:
      cmd: scripts/setup-kind-cluster.sh

  - name: Setup llm-operator namespace
    kubernetes.core.k8s:
      name: llm-operator
      api_version: v1
      kind: Namespace

  - name: Setup kong helm repository
    kubernetes.core.helm_repository:
      name: kong
      repo_url: https://charts.konghq.com
  - name: Copy kong_values file
    ansible.builtin.copy:
      src: ../hack/kong_values.yaml
      dest: kong_values.yaml
  - name: Deploy kong
    kubernetes.core.helm:
      release_name: kong
      release_namespace: kong
      create_namespace: true
      chart_ref: kong/kong
      set_values:
      - value: ingressController.installCRDs=false
      values_files:
      - kong_values.yaml
  - name: Copy kong_internal_values file
    ansible.builtin.copy:
      src: ../hack/kong_internal_values.yaml
      dest: kong_internal_values.yaml
  - name: Deploy kong internal
    kubernetes.core.helm:
      release_name: kong-internal
      release_namespace: kong-internal
      create_namespace: true
      chart_ref: kong/kong
      set_values:
      - value: ingressController.installCRDs=false
      values_files:
      - kong_internal_values.yaml

  - name: Setup postgres namespace
    kubernetes.core.k8s:
      name: postgres
      api_version: v1
      kind: Namespace
  - name: Copy postgres.yaml file
    ansible.builtin.copy:
      src: ../hack/postgres.yaml
      dest: postgres.yaml
  - name: Deploy postgres resources
    kubernetes.core.k8s:
      state: present
      namespace: postgres
      src: postgres.yaml
  - name: Set up postgres secret
    kubernetes.core.k8s:
      definition:
        apiVersion: v1
        kind: Secret
        metadata:
          name: postgres
          namespace: llm-operator
        type: Opaque
        data:
          # base64 encoded "ps_password"
          password: cHNfcGFzc3dvcmQ=
  - name: wait for postgres ready
    kubernetes.core.k8s_info:
      api_version: v1
      kind: Pod
      namespace: postgres
      label_selectors:
      - app=postgres
      wait: true
      wait_condition:
        type: Ready
      wait_timeout: 60
  - name: create databases
    ansible.builtin.script:
      cmd: scripts/setup-databases.sh

  - name: Setup minio namespace
    kubernetes.core.k8s:
      name: minio
      api_version: v1
      kind: Namespace
  - name: Copy mino yaml file
    ansible.builtin.copy:
      src: ../hack/minio.yaml
      dest: minio.yaml
  - name: Deploy minio
    kubernetes.core.k8s:
      state: present
      namespace: minio
      src: minio.yaml
  - name: Wait for minio ready
    kubernetes.core.k8s_info:
      api_version: v1
      kind: Pod
      namespace: minio
      label_selectors:
      - app=minio
      wait: true
      wait_condition:
        type: Ready
      wait_timeout: 60
  - name: Check minio secret
    kubernetes.core.k8s_info:
      api_version: v1
      kind: Secret
      namespace: llm-operator
      name: aws
    register: result
  - name: Setup bucket
    ansible.builtin.script:
      cmd: scripts/setup-minio-bucket.sh
    when: result.resources | length == 0

  - name: Setup keda helm repository
    kubernetes.core.helm_repository:
      name: kedacore
      repo_url: https://kedacore.github.io/charts
  - name: Deploy keda
    kubernetes.core.helm:
      release_name: keda
      release_namespace: keda
      create_namespace: true
      chart_ref: kedacore/keda

  - name: Copy llm-operator-values file
    ansible.builtin.copy:
      src: ../hack/llm-operator-values.yaml
      dest: llm-operator-values.yaml
  - name: Deploy llm-operator
    kubernetes.core.helm:
      release_name: llm-operator
      release_namespace: llm-operator
      create_namespace: true
      chart_ref: oci://public.ecr.aws/cloudnatix/llm-operator-charts/llm-operator
      values_files:
      - llm-operator-values.yaml
